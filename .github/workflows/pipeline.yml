name: Pipeline

on:
  push:
    branches:
      - main
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  test:
    if: ${{ !startsWith(github.event.head_commit.message, 'docs') }}
    strategy:
      matrix:
        go-version: [1.19.x]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Test
      #   run: go test ./...

  integration:
    needs: test
    if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') || contains(github.event.head_commit.message, '[deploy]') }}
    runs-on: ubuntu-latest
    outputs:
      latestVersion: ${{ steps.previousTag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub Private Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get Previous tag
        id: previousTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: Build and push
        if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') }}
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            aysnine/sleepless:${{ steps.previousTag.outputs.tag }}
            aysnine/sleepless:latest
      - run: |
          TAG=${{ steps.previousTag.outputs.tag }}
          echo $TAG
          sed -i -e "s/\:latest/\:${TAG}/g" ./deploy/cls-softfunny.yml
          cat ./deploy/cls-softfunny.yml

      - uses: cschleiden/replace-tokens@v1
        with:
          files: '["deploy/*.yml"]'
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          WX_APP_ID: ${{ secrets.WX_APP_ID }}
          WX_APP_SECRET: ${{ secrets.WX_APP_SECRET }}

      - uses: actions-hub/kubectl@v1.21.2
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./deploy/cls-softfunny.yml
